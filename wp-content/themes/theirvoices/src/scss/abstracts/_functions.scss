@function toEm($val) {
	@return ($val + 0em);
}

@function toRem($val) {
	@return ($val + 0rem);
}

@function toPx($val) {
	@return ($val + 0px);
}

@function pxToEm($px, $ref: $sizeFontBase) {
	@return toEm(toPx($px) / toPx($ref));
}

@function pxToRem($px) {
	@return toRem(toPx($px) / toPx($sizeFontBase));
}

@function pxToPc($px, $ref: $sizeWidthContent) {
	@return (toPx($px) / toPx($ref) * 100%);
}

@function is-map($var){
	@return type-of($var) == 'map';
}

@function verticalSpace($color: false, $viewport: mobile, $multiply: 1) {
	@if(map-has-key($verticalSpaces, $color) and map-has-key($mqBreakpoints, $viewport)) {
		@if(is-map(map-get($verticalSpaces , $color))) {
			@return pxToRem(map-get(map-get($verticalSpaces, $color), $viewport) * $multiply);
		} @else {
			@return pxToRem(map-get($verticalSpaces , $color) * $multiply);
		}
	} @else {
		@return 0;
	}
}